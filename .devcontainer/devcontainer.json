{
  "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
  "features": {
    "ghcr.io/devcontainers/features/java:1": {
      "version": "17"
    },
    "ghcr.io/devcontainers-contrib/features/clojure-asdf:2": {},
    "ghcr.io/devcontainers/features/desktop-lite:1": {},
    "ghcr.io/devcontainers-contrib/features/apt-get-packages:1": {
      "ppas": ["ppa:ubuntuhandbook1/emacs"],
      "packages": "emacs,rlwrap,fonts-hack"
    },
    "ghcr.io/devcontainers/features/python:1": {},
    "ghcr.io/rocker-org/devcontainer-features/quarto-cli:1": {},
    "ghcr.io/rocker-org/devcontainer-features/r-apt:0": {},
    "ghcr.io/rocker-org/devcontainer-features/rstudio-server": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers-contrib/features/leiningen-sdkman:2": {},
    "ghcr.io/devcontainers-contrib/features/poetry:2": {},
    "ghcr.io/rocker-org/devcontainer-features/r-packages:1": {
      "packages": "Rserve",
      "additionalRepositories": "rforge= 'https://rforge.net'"
  }, 
    "ghcr.io/wxw-matt/devcontainer-features/command_runner:latest": {
            "command1": "sudo bash < <(curl -s https://raw.githubusercontent.com/clojure-lsp/clojure-lsp/master/install)",
            "command2": "sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)"
        }
  },
  "overrideFeatureInstallOrder": [
    "ghcr.io/devcontainers/features/python",
    "ghcr.io/devcontainers/features/java",
    "ghcr.io/devcontainers-contrib/features/clojure-asdf",
    "ghcr.io/wxw-matt/devcontainer-features/command_runner"
  ],

  "forwardPorts": [6080,12345],
  "portsAttributes": {
    "6080": {
      "label": "desktop"
    },
    "12345": {
      "label": "nrepl"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "betterthantomorrow.calva"
      ]
    }
  },
  
  "postStartCommand":  
  { "ide-setup": "bash -c 'if [ -f \"/home/vscode/.setup-ide/setup-ide.sh\" ]; then /home/vscode/.setup-ide/setup-ide.sh; fi'",
    "clojure prepare": "bash -i -c 'clj -Sthreads 1 -P'",
    "poetry setup":  "bash -i -c 'mkdir -p .venv && poetry install'"

  }
}
 
